1.  Remove Element from Array

int Solution::removeElement(vector<int> &A, int B) {
   
    int count =0;
    int n = A.size();
    for(int i=0;i<n;i++){
        if(A[i]!=B){
          A[count] = A[i];
          count++;
        }
    }
   
    return count;
}

2.   Array 3 Pointers

int Solution::minimize(const vector<int> &A, const vector<int> &B, const vector<int> &C) {
    int i=0,j=0,k=0;
    int maxiValue = INT_MAX;
    while(i<A.size() && j<B.size() && k<C.size()){
        int maxi = max(abs(A[i] - B[j]), max(abs(B[j] - C[k]), abs(C[k] - A[i])));
        maxiValue = min(maxiValue,maxi);
        
        int minVal = min({A[i],B[j],C[k]});
        
        if(minVal == A[i]) i++;
        else if(B[j]==minVal) j++;
        else k++;
    }
    return maxiValue;
}


3..  Container With Most Water

int Solution::maxArea(vector<int> &A) {
    int n = A.size();
    int maxArea=0;
    int s=0,e =n-1;
    while(s<e){
        int min_hei = min(A[s],A[e]);
        int width = e-s;
        int area = width*min_hei;
        maxArea = max(area,maxArea);
        
        if(A[s]<A[e]){
            s++;
        }
        else
        e--;
    }
    return maxArea;
}

