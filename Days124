.......1.......Remove duplicate element from sorted Linked List

Node *removeDuplicates(Node *head)
{
 // your code goes here
 
 //   1....USING WITH THE SPACE..............
 
//  vector<int>ans;
//  ans.push_back(head->data);
 
//  Node*temp = head->next;
//  while(temp){
//      if(ans[ans.size()-1] != temp->data){
//          ans.push_back(temp->data);
//      }
//      temp = temp->next;
//  }
 
//  Node*curr = head;
//  int index=0;
//  while(index<ans.size()){
//      curr->data = ans[index];
//      index++;
//      curr = curr->next;
//  }
 
//  int size = ans.size()-1;
//  curr = head;
//  while(size--){
//      curr = curr->next;
//  }
//  curr->next= NULL;
 
//  return head;

//......2. WITHOUT USING SPACE............

        Node*temp = head->next;
        Node*prev = head;
        
        while(temp){
            if(prev->data == temp->data){
                temp = temp->next;
            }
            else{
                prev = prev->next;
                prev->data = temp->data;
                temp = temp->next;
            }
        }
        prev->next = NULL;
        return head;
}

2.........Merge two sorted linked lists........

Node* sortedMerge(Node* head1, Node* head2)  
{  
    // code here
    
    Node*head= new Node(1);
    Node*ans = head;
    while(head1 && head2){
        if(head1->data < head2->data){
            ans->next = head1;
            head1 = head1->next;
            ans = ans->next;
            ans->next = NULL;
        }
        else{
            ans->next = head2;
            head2 = head2->next;
            ans = ans->next;
            ans->next = NULL;
        }
    }
    if(head1)
        ans->next = head1;
    else
     ans->next = head2;
     
    ans = head;
    head = head->next;
    
    return head;
} 
