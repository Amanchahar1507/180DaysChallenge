1..............Interleave the First Half of the Queue with Second Half

class Solution{
public:
    vector<int> rearrangeQueue(queue<int> &q){
        int n = q.size();
        vector<int>ans(n,0);
        int i=0;
        while(i<n){
            ans[i] = q.front();
            q.pop();
            i += 2;
        }
        
        i=1;
        while(i<n){
            ans[i] = q.front();
            q.pop();
            i+=2;
        }
        return ans;
    }
};

2..........Sum of leaf nodes in BST


class Solution
{
    public:
        /*You are required to complete below method */
        int sumOfLeafNodes(Node *root ){
             /*Your code here */
             if(!root) return 0;\
             
            if(root->left==NULL && root->right==NULL){
                 return root->data;
            }
             
             int left= sumOfLeafNodes(root->left);
            
              int right=  sumOfLeafNodes(root->right);
            
            
           return left+right;  
        }
};
