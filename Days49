1..........Print Diagonally

class Solution{
	public:
	vector<int> downwardDiagonal(int N, vector<vector<int>> A)
	{
		// Your code goes here
		vector<int>ans;
		
		for(int i=0;i<N;i++){
		    int row =0,col =i;
		    while(row<N && col>=0){
		        ans.push_back(A[row][col]);
		        row++;
		        col--;
		    }
		}
		
		for(int i=1;i<N;i++){
		    int row=i,col=N-1;
		    while(row<N && col>=0){
		        ans.push_back(A[row][col]);
		        row++;
		        col--;
		    }
		}
		return ans;
	}
};

2...............Print Matrix in snake Pattern


class Solution
{   
    public:
    //Function to return list of integers visited in snake pattern in matrix.
    vector<int> snakePattern(vector<vector<int> > matrix)
    {   
        // code here
        int n = matrix.size();
        int m = matrix[0].size();
        vector<int>ans;
        for(int i=0;i<n;i++){
            if(i%2==0){
                for(int j=0;j<m;j++){
                    ans.push_back(matrix[i][j]);
                }
            }
            else{
                for(int j=m-1;j>=0;j--){
                    ans.push_back(matrix[i][j]);
                }
            }
        }
        return ans;
    }
};
